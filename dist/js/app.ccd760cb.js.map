{"version":3,"file":"js/app.ccd760cb.js","mappings":"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","sources":["webpack://web/./src/App.vue","webpack://web/./src/pages/ChatPage.vue","webpack://web/./src/components/chat/DatasetPreview.vue","webpack://web/./src/components/chat/DatasetPreview.vue?f44f","webpack://web/./src/components/CodeBlock.vue","webpack://web/./src/components/CodeBlock.vue?69ec","webpack://web/./src/components/StatusTimeline.vue","webpack://web/./src/components/StatusTimeline.vue?3b66","webpack://web/./src/components/TaskCard.vue","webpack://web/./src/components/TaskCard.vue?dd6a","webpack://web/./src/components/MarkdownPreview.vue","webpack://web/./src/components/MarkdownPreview.vue?14cb","webpack://web/./src/components/FilePreview.vue","webpack://web/./src/components/FilePreview.vue?75fc","webpack://web/./src/components/FileLinkDetector.vue","webpack://web/./src/components/FileLinkDetector.vue?4b94","webpack://web/./src/pages/ChatPage.vue?f2f1","webpack://web/./src/App.vue?7ccd","webpack://web/./src/main.js","webpack://web/webpack/bootstrap","webpack://web/webpack/runtime/chunk loaded","webpack://web/webpack/runtime/compat get default export","webpack://web/webpack/runtime/define property getters","webpack://web/webpack/runtime/global","webpack://web/webpack/runtime/hasOwnProperty shorthand","webpack://web/webpack/runtime/jsonp chunk loading","webpack://web/webpack/startup"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <header class=\"app-header\">\n      <h1>MCTS</h1>\n    </header>\n    \n    <ChatPage />\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport ChatPage from './pages/ChatPage.vue'\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    ChatPage\n  }\n})\n</script>\n\n<style>\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  color: #333;\n  background-color: #f5f5f5;\n}\n\n.app {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  padding-top: 60px; /* 为固定的标题栏留出空间 */\n}\n\n.app-header {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background-color: #333333;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 24px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n}\n\n.app-header h1 {\n  font-size: 20px;\n  font-weight: 500;\n}\n</style>\n","<template>\n    <div class=\"main-container\">\n      <div class=\"chat-container\">\n        \n        <div class=\"chat-messages\">\n          <!-- User query bubble (right side) -->\n          <div class=\"message-group user-message\">\n            <div class=\"message-content user-content\">\n              <div class=\"message-bubble user-bubble\">\n                <p>{{ query }}</p>\n              </div>\n              <div class=\"attachment-section\" @click=\"toggleDatasetPreview\">\n                <div class=\"attachment-card\">\n                  <div class=\"attachment-icon\">📊</div>\n                  <div class=\"attachment-info\">\n                    <div class=\"attachment-name\">shopping.csv</div>\n                    <div class=\"attachment-meta\">Dataset • Click to view</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"avatar user-avatar\">\n              <span class=\"avatar-icon\">👤</span>\n            </div>\n          </div>\n          \n          <!-- AI response bubble (left side) -->\n          <div class=\"message-group ai-message\">\n            <div class=\"avatar ai-avatar\">\n              <span class=\"avatar-icon\">🌲</span>\n            </div>\n            <div class=\"message-content ai-content\">\n              <div class=\"message-bubble ai-bubble\">\n                <p>I'll analyze the differences between customers based on the shopping dataset.</p>\n                \n                <!-- Main AI response content -->\n                <div class=\"ai-response-content\">\n                  <!-- 直接显示内容块 -->\n                  <div v-for=\"(block, index) in displayedBlocks\" :key=\"index\" class=\"content-block\">\n                    <!-- Normal text content -->\n                    <div v-if=\"block.type === 'text'\" class=\"text-block\">\n                      <FileLinkDetector \n                        :content=\"block.content\" \n                        @file-preview=\"selectFile\" \n                      />\n                    </div>\n                    \n                    <!-- Code block (clickable) -->\n                    <div v-else-if=\"block.type === 'code'\" \n                         class=\"code-block-preview\"\n                         @click=\"selectCodeBlock(block)\">\n                      <div class=\"code-block-icon\">💻</div>\n                      <div class=\"code-block-info\">\n                        <div class=\"code-block-title\">{{ block.isJson ? 'JSON Data' : 'Code Block' }}</div>\n                        <div class=\"code-block-preview-text\">{{ getCodePreview(block.content) }}</div>\n                      </div>\n                    </div>\n                    \n                    <!-- 生成过程块（可折叠） -->\n                    <StatusTimeline\n                      v-else-if=\"block.type === 'status-group'\"\n                      :items=\"block.items\"\n                      :initialExpanded=\"block.expanded\"\n                    />\n                    \n                    <!-- 任务处理块（卡片式显示） -->\n                    <TaskCard\n                      v-else-if=\"block.type === 'task-block'\"\n                      :content=\"block.content\"\n                      :taskId=\"block.id\"\n                    />\n                    \n                    <!-- 文件预览组件 -->\n                    <FilePreview\n                      v-else-if=\"block.type === 'file'\"\n                      :fileName=\"block.fileName\"\n                      :filePath=\"block.filePath\"\n                      :fileType=\"block.fileType\"\n                      @preview=\"selectFile\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Code block detail panel -->\n      <div class=\"detail-panel\" v-if=\"selectedCodeBlock\">\n        <CodeBlock \n          :content=\"selectedCodeBlock.content\"\n          :isJson=\"selectedCodeBlock.isJson\"\n        />\n        <button class=\"close-btn\" @click=\"closeCodeDetail\">×</button>\n      </div>\n      \n      <!-- File preview panel -->\n      <div class=\"detail-panel\" v-if=\"selectedFile\">\n        <MarkdownPreview \n          v-if=\"selectedFile.fileType === 'markdown' || selectedFile.fileType === 'report'\"\n          :filePath=\"selectedFile.filePath\"\n          :fileName=\"selectedFile.fileName\"\n        />\n        <iframe \n          v-else-if=\"selectedFile.fileType === 'html'\"\n          :src=\"selectedFile.filePath\"\n          class=\"html-preview\"\n          frameborder=\"0\"\n        ></iframe>\n        <img \n          v-else-if=\"selectedFile.fileType === 'image'\"\n          :src=\"selectedFile.filePath\"\n          class=\"image-preview\"\n          alt=\"File preview\"\n        />\n        <button class=\"close-btn\" @click=\"closeFilePreview\">×</button>\n      </div>\n      \n      <!-- Dataset Preview Modal -->\n      <DatasetPreview \n        v-if=\"isDatasetPreviewVisible\" \n        :isLoading=\"isLoading\"\n        :datasetError=\"datasetError\"\n        :datasetHeaders=\"datasetHeaders\"\n        :datasetRows=\"datasetRows\"\n        @close=\"toggleDatasetPreview\"\n      />\n      \n      <!-- Fullscreen image preview -->\n      <div v-if=\"fullScreenImage\" class=\"fullscreen-overlay\" @click=\"closeFullScreenImage\">\n        <div class=\"fullscreen-image-container\">\n          <img :src=\"fullScreenImage\" alt=\"Fullscreen preview\" class=\"fullscreen-image\">\n          <button class=\"close-button\" @click.stop=\"closeFullScreenImage\">×</button>\n        </div>\n      </div>\n      \n      <!-- 回到顶部按钮 -->\n      <div class=\"back-to-top\" v-show=\"showBackToTop\" @click=\"scrollToTop\">\n        <div class=\"back-to-top-icon\">↑</div>\n      </div>\n\n      <!-- 显示所有生成文件按钮 -->\n      <div class=\"show-files-button\" @click=\"scanIterationsDirectory\">\n        <div class=\"show-files-icon\">📁</div>\n        <div class=\"tooltip\">扫描文件</div>\n      </div>\n      \n      <!-- 跳过动画按钮 -->\n      <div class=\"skip-animation-button\" v-if=\"!isTypingComplete\" @click=\"skipTypingAnimation\">\n        <div class=\"skip-animation-icon\">⏭️</div>\n        <div class=\"tooltip\">跳过动画</div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted, onUnmounted } from 'vue'\n  import DatasetPreview from '@/components/chat/DatasetPreview.vue'\n  import CodeBlock from '@/components/CodeBlock.vue'\n  import StatusTimeline from '@/components/StatusTimeline.vue'\n  import TaskCard from '@/components/TaskCard.vue'\n  import MarkdownPreview from '@/components/MarkdownPreview.vue'\n  import FilePreview from '@/components/FilePreview.vue'\n  import FileLinkDetector from '@/components/FileLinkDetector.vue'\n  \n  export default {\n    name: 'ChatPage',\n    components: {\n      DatasetPreview,\n      CodeBlock,\n      StatusTimeline,\n      TaskCard,\n      MarkdownPreview,\n      FilePreview,\n      FileLinkDetector\n    },\n    setup() {\n      const query = ref(\"Analyze the difference between the customers\")\n      const isDatasetPreviewVisible = ref(false)\n      const datasetHeaders = ref([])\n      const datasetRows = ref([])\n      const isLoading = ref(false)\n      const datasetError = ref(null)\n      const fullScreenImage = ref(null)\n      const introContent = ref('')\n      const contentBlocks = ref([]) // 全部内容块\n      const displayedBlocks = ref([]) // 实际显示的内容块\n      const isTypingComplete = ref(false) // 是否已完成打字\n      const typingSpeed = ref(20) // 打字速度（毫秒/行），从100改为20使其更快\n      const selectedCodeBlock = ref(null)\n      const showBackToTop = ref(false)\n      const selectedFile = ref(null)\n      const generatedFiles = ref([])\n      \n      // 准备显示的内容单元（更细粒度的显示单位）\n      const contentUnits = ref([]);\n      const displayedUnits = ref([]);\n      const currentUnitIndex = ref(0);\n      // 保存定时器引用\n      let typingIntervalRef = null;\n      \n      const selectCodeBlock = (block) => {\n        selectedCodeBlock.value = block\n      }\n      \n      const closeCodeDetail = () => {\n        selectedCodeBlock.value = null\n      }\n      \n      const getCodePreview = (code) => {\n        if (code.length <= 80) {\n          return code\n        }\n        return code.substring(0, 80) + '...'\n      }\n      \n      const formatTextWithHighlights = (text) => {\n        // 检查文本中是否包含标签\n        const containsHTMLTags = /<span|<div|<p/i.test(text);\n        if (containsHTMLTags) {\n          console.log(\"文本已包含HTML标签，直接返回\");\n          return text; // 如果已包含HTML标签，直接返回，避免破坏已有标签\n        }\n        \n        // 高亮关键词和短语\n        const keywords = [\n          'Finding', 'available action', 'Trying action',\n          'MCTS search started', 'MCTS search completed', \n          'Iteration', 'Simulation', 'state', 'depth',\n          'Selected action', 'Executing action', 'Found'\n        ];\n        \n        // 转义HTML\n        let result = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        \n        // 特殊动作标签 - 为每个动作指定不同的类名和匹配模式\n        const actionKeywords = [\n          {action: 'Query2Chapters', className: 'action-query-chapters'},\n          {action: 'ReviseVis', className: 'action-revise'}, \n          {action: 'Charts2Captions', className: 'action-charts-captions'}, \n          {action: 'Captions2Summaries', className: 'action-captions-summaries'}, \n          {action: 'Chapter2Tasks', className: 'action-chapter-tasks'}, \n          {action: 'Tasks2Charts', className: 'action-tasks-charts'}\n        ];\n        \n        // 使用最直接的字符串分割和连接方法处理每个动作名称\n        for (const item of actionKeywords) {\n          // 进行分割处理，处理一个动作名称出现多次的情况\n          let parts = result.split(item.action);\n          if (parts.length > 1) {\n            // 说明找到了至少一个匹配\n            console.log(`替换动作 ${item.action}, 出现 ${parts.length - 1} 次`);\n            result = parts.join(`<span class=\"action-tag ${item.className}\">${item.action}</span>`);\n          }\n        }\n        \n        // 高亮关键词\n        keywords.forEach(keyword => {\n          const regex = new RegExp(`(${keyword})`, 'gi');\n          result = result.replace(regex, '<span class=\"highlight\">$1</span>');\n        });\n        \n        return result;\n      };\n      \n      const openFullScreenImage = (imageSrc) => {\n        fullScreenImage.value = imageSrc\n      }\n  \n      const closeFullScreenImage = () => {\n        fullScreenImage.value = null\n      }\n      \n      const toggleDatasetPreview = async () => {\n        isDatasetPreviewVisible.value = !isDatasetPreviewVisible.value\n        \n        // Load dataset on first open\n        if (isDatasetPreviewVisible.value && datasetRows.value.length === 0) {\n          await loadDataset()\n        }\n      }\n      \n      const loadDataset = async () => {\n        isLoading.value = true\n        datasetError.value = null\n        try {\n          const response = await fetch('/storyteller/dataset/shopping.csv')\n          if (!response.ok) {\n            throw new Error(`Failed to load dataset (${response.status})`)\n          }\n          \n          const csvText = await response.text()\n          const lines = csvText.split('\\n').filter(line => line.trim() !== '')\n          \n          if (lines.length > 0) {\n            datasetHeaders.value = lines[0].split(',').map(h => h.trim())\n            \n            // Only load up to 100 rows for performance\n            const maxRows = Math.min(lines.length - 1, 100)\n            datasetRows.value = lines.slice(1, maxRows + 1).map(line => \n              line.split(',').map(cell => cell.trim())\n            )\n          }\n        } catch (error) {\n          console.error('Error loading dataset:', error)\n          datasetError.value = error.message\n        } finally {\n          isLoading.value = false\n        }\n      }\n  \n      onMounted(async () => {\n        try {\n          // 添加滚动监听\n          window.addEventListener('scroll', handleScroll)\n          \n          // Read log.txt file\n          const response = await fetch('/storyteller/output/log.txt')\n          const logContent = await response.text()\n          \n          // 测试: 在内容中添加带样式的状态信息\n          const styledContent = logContent\n            .replace(\n              /当前状态: ([A-Za-z0-9_.]+)/g, \n              '<div class=\"state-wrapper\"><span class=\"state-tag\">当前状态: $1</span></div>'\n            );\n          \n          // 直接提取并解析整个日志内容\n          introContent.value = styledContent\n          parseContentBlocks(styledContent)\n          \n          // 检查是否存在代码块，如果有则在控制台输出\n          if (contentBlocks.value.some(block => block.type === 'code')) {\n            console.log('发现代码块:', contentBlocks.value.filter(block => block.type === 'code').length)\n          } else {\n            console.log('未找到代码块')\n          }\n          \n          // 立即执行文件扫描\n          console.log(\"页面加载完成，自动执行文件扫描\");\n          setTimeout(() => {\n            scanIterationsDirectory();\n          }, 1000); // 延迟1秒执行，确保其他内容已加载完成\n          \n        } catch (error) {\n          console.error('Failed to load log file:', error)\n        }\n      })\n  \n      onUnmounted(() => {\n        // 移除滚动监听\n        window.removeEventListener('scroll', handleScroll);\n        \n        // 清除打字机效果的定时器\n        if (typingIntervalRef) {\n          clearInterval(typingIntervalRef);\n        }\n      })\n  \n      // 处理滚动事件，显示/隐藏回到顶部按钮\n      const handleScroll = () => {\n        // 当页面滚动超过300px时显示回到顶部按钮\n        showBackToTop.value = window.scrollY > 300\n      }\n  \n      // 将解析好的内容块逐步显示出来\n      const startTypingAnimation = () => {\n        // 如果还没准备内容单元，先准备\n        if (contentUnits.value.length === 0) {\n          prepareContentUnits();\n        }\n        \n        // 如果动画已完成或没有内容，直接返回\n        if (isTypingComplete.value || contentUnits.value.length === 0) {\n          return null;\n        }\n        \n        // 智能滚动控制\n        let shouldAutoScroll = true; // 默认自动滚动\n        \n        // 添加滚动事件检测用户是否在底部\n        const scrollHandler = () => {\n          // 检查用户是否滚动到接近底部\n          const scrollPosition = window.scrollY + window.innerHeight;\n          const nearBottom = document.body.scrollHeight - scrollPosition < 100;\n        \n          // 更新自动滚动状态\n          shouldAutoScroll = nearBottom;\n          \n          // 如果已经在底部，添加标志\"关注底部\"\n          if (nearBottom) {\n            console.log(\"用户在底部，启用自动滚动\");\n          } else {\n            console.log(\"用户不在底部，暂停自动滚动\");\n          }\n        };\n        \n        // 添加滚动监听\n        window.addEventListener('scroll', scrollHandler);\n        \n        // 初始检查一次\n        scrollHandler();\n        \n        // 从当前位置继续显示\n        const typingInterval = setInterval(() => {\n          if (currentUnitIndex.value < contentUnits.value.length) {\n            // 添加下一个内容单元\n            processNextContentUnit();\n            \n            // 更新索引\n            currentUnitIndex.value++;\n            \n            // 根据用户位置决定是否自动滚动\n            if (shouldAutoScroll) {\n              setTimeout(() => {\n                window.scrollTo({\n                  top: document.body.scrollHeight,\n                  behavior: 'smooth'\n                });\n              }, 50);\n            }\n          } else {\n            // 全部显示完毕，清除定时器和事件监听\n            clearInterval(typingInterval);\n            window.removeEventListener('scroll', scrollHandler);\n            isTypingComplete.value = true;\n            typingIntervalRef = null;\n            \n            // 动画完成后扫描iterations目录下的文件\n            setTimeout(() => {\n              scanIterationsDirectory();\n            }, 500);\n          }\n        }, typingSpeed.value);\n        \n        // 保存定时器引用，以便可以在组件卸载时清除\n        typingIntervalRef = typingInterval;\n        return typingInterval;\n      }\n  \n      // 处理下一个内容单元\n      const processNextContentUnit = () => {\n        const unit = contentUnits.value[currentUnitIndex.value];\n        \n        // 根据单元类型进行不同处理\n        if (unit.type === 'line') {\n          // 普通文本行\n          displayedUnits.value.push(unit);\n          \n          // 基于当前内容单元构建要显示的内容块\n          rebuildDisplayedBlocks();\n        } else if (unit.type === 'block-start') {\n          // 块开始标记，创建一个新块\n          displayedUnits.value.push(unit);\n        } else if (unit.type === 'block-line') {\n          // 块内的行\n          displayedUnits.value.push(unit);\n          \n          // 更新对应块的内容\n          rebuildDisplayedBlocks();\n        } else if (unit.type === 'block-end') {\n          // 块结束标记\n          displayedUnits.value.push(unit);\n          rebuildDisplayedBlocks();\n          \n          // 在块结束时，如果是代码块，自动在右侧展示\n          const lastBlock = displayedBlocks.value[displayedBlocks.value.length - 1];\n          if (lastBlock && lastBlock.type === 'code') {\n            // 自动展示代码块在右侧面板\n            selectCodeBlock(lastBlock);\n          }\n        } else if (unit.type === 'whole-block') {\n          // 整块显示的内容\n          displayedUnits.value.push(unit);\n          rebuildDisplayedBlocks();\n          \n          // 如果是整块显示的代码块，也在右侧展示\n          const lastBlock = displayedBlocks.value[displayedBlocks.value.length - 1];\n          if (lastBlock && lastBlock.type === 'code') {\n            // 自动展示代码块在右侧面板\n            selectCodeBlock(lastBlock);\n          }\n        }\n      };\n  \n      // 基于已显示的内容单元重建显示块\n      const rebuildDisplayedBlocks = () => {\n        // 创建一个新的块数组\n        const blocks = [];\n        \n        // 当前正在构建的块\n        let currentBlock = null;\n        let currentBlockLines = [];\n        \n        // 遍历所有已显示的单元\n        displayedUnits.value.forEach(unit => {\n          if (unit.type === 'line') {\n            // 普通文本行，作为文本块添加\n            blocks.push({\n              type: 'text',\n              content: unit.content\n            });\n          } else if (unit.type === 'block-start') {\n            // 块开始，记录当前块类型和属性\n            currentBlock = unit.block;\n            currentBlockLines = [];\n          } else if (unit.type === 'block-line') {\n            // 块内容行，添加到当前块\n            currentBlockLines.push(unit.content);\n          } else if (unit.type === 'block-end') {\n            // 块结束，将当前块添加到块数组\n            if (currentBlock) {\n              const block = { ...currentBlock };\n              block.content = currentBlockLines.join('\\n');\n              blocks.push(block);\n              currentBlock = null;\n              currentBlockLines = [];\n            }\n          } else if (unit.type === 'whole-block') {\n            // 整块显示的内容\n            blocks.push(unit.block);\n          }\n        });\n        \n        // 更新显示的块\n        displayedBlocks.value = blocks;\n      };\n        \n      // 跳过打字效果，直接显示所有内容\n      const skipTypingAnimation = () => {\n        if (typingIntervalRef) {\n          clearInterval(typingIntervalRef);\n        }\n        \n        // 直接显示所有内容块\n        displayedBlocks.value = [...contentBlocks.value];\n        isTypingComplete.value = true;\n        currentUnitIndex.value = contentUnits.value.length;\n        \n        // 立即执行文件扫描\n        console.log(\"跳过动画，立即执行文件扫描\");\n        scanIterationsDirectory();\n        \n        // 关闭可能显示的代码块，以便后续显示report.md\n        if (selectedCodeBlock.value) {\n          setTimeout(() => {\n            closeCodeDetail();\n          }, 500);\n        }\n      };\n  \n      // 将大块内容拆分成更小的显示单元\n      const prepareContentUnits = () => {\n        contentUnits.value = [];\n        \n        // 遍历所有内容块\n        contentBlocks.value.forEach(block => {\n          if (block.type === 'text') {\n            // 文本块按行拆分\n            const lines = block.content.split('\\n');\n            lines.forEach(line => {\n              if (line.trim()) {\n                contentUnits.value.push({\n                  type: 'line',\n                  content: line,\n                  parentType: 'text'\n                });\n              }\n            });\n          } else if (block.type === 'task-block' || block.type === 'code') {\n            // 特殊块也按行拆分\n            const lines = block.content.split('\\n');\n            \n            // 先添加一个开始标记\n            contentUnits.value.push({\n              type: 'block-start',\n              blockType: block.type,\n              block: block\n            });\n            \n            // 逐行添加内容\n            lines.forEach(line => {\n              contentUnits.value.push({\n                type: 'block-line',\n                content: line,\n                parentType: block.type\n              });\n            });\n            \n            // 添加结束标记\n            contentUnits.value.push({\n              type: 'block-end',\n              blockType: block.type\n            });\n          } else {\n            // 其他类型的块作为整体添加\n            contentUnits.value.push({\n              type: 'whole-block',\n              block: block\n            });\n            }\n        });\n      };\n  \n      // 在parseContentBlocks函数的末尾调用打字机效果\n      const parseContentBlocks = (content) => {\n        console.log(\"开始解析内容块，内容长度:\", content.length);\n        \n        // 清空之前的文件列表\n        generatedFiles.value = [];\n        \n        // 待解析处理的内容\n        let filteredContent = content;\n        \n        // 跟踪已识别的特殊区域\n        const markers = [];\n        \n        // 用于记录任务块覆盖的位置\n        const coveredPositions = {};\n        \n        // 识别任务块边界\n        const taskBlockRegex = /==== Start of Task Block: ([a-zA-Z0-9-]+) ====([\\s\\S]*?)==== End of Task Block: \\1 ====/g;\n        let taskMatch;\n        \n        while ((taskMatch = taskBlockRegex.exec(filteredContent)) !== null) {\n          const taskId = taskMatch[1];\n          const taskContent = taskMatch[2].trim();\n          const startIndex = taskMatch.index;\n          const endIndex = taskMatch.index + taskMatch[0].length;\n          \n          // 记录这个任务块的起止位置\n          markers.push({\n            type: 'task-block',\n            id: taskId,\n            content: taskContent,\n            start: startIndex,\n            end: endIndex\n          });\n          \n          // 标记任务块覆盖的所有位置\n          for (let i = startIndex; i < endIndex; i++) {\n            coveredPositions[i] = true;\n          }\n        }\n        \n        // 识别代码块\n        const codeBlockRegex = /```(?:(?:(json))|(?:[a-zA-Z]*))\\n([\\s\\S]*?)```/g;\n        let codeMatch;\n        \n        while ((codeMatch = codeBlockRegex.exec(filteredContent)) !== null) {\n          const isJson = !!codeMatch[1]; // 检查是否是json代码块\n          const codeContent = codeMatch[2];\n          const startIndex = codeMatch.index;\n          const endIndex = codeMatch.index + codeMatch[0].length;\n          \n          // 记录代码块位置\n            markers.push({\n            type: 'code',\n            content: codeContent,\n            isJson,\n            start: startIndex,\n            end: endIndex\n          });\n        }\n        \n        // 识别状态组\n        const statusListRegex = /(- \\[.*?\\] .*(?:\\n {2,}[^\\n]+)*(?:\\n(?:- \\[.*?\\] .*(?:\\n {2,}[^\\n]+)*))+)/g;\n        let statusMatch;\n        \n        while ((statusMatch = statusListRegex.exec(filteredContent)) !== null) {\n          const statusContent = statusMatch[0];\n          const startIndex = statusMatch.index;\n          const endIndex = statusMatch.index + statusMatch[0].length;\n          \n          // 解析状态列表项\n          const statusItemRegex = /- \\[(.*?)\\] (.*?)(?:\\n|$)(?:\\n {2,}([^\\n]+))?/g;\n          const statusItems = [];\n          let statusItemMatch;\n          \n          // 重置lastIndex以便从statusContent的开头开始搜索\n          statusItemRegex.lastIndex = 0;\n          \n          while ((statusItemMatch = statusItemRegex.exec(statusContent)) !== null) {\n            const status = statusItemMatch[1].trim() === 'x' ? 'done' : \n                          statusItemMatch[1].trim() === '~' ? 'abandoned' : 'pending';\n            \n            statusItems.push({\n              status,\n              text: statusItemMatch[2],\n              detail: statusItemMatch[3] || ''\n            });\n          }\n          \n          // 如果至少有2个状态项，才添加为状态组\n          if (statusItems.length >= 2) {\n            markers.push({\n              type: 'status-group',\n              items: statusItems,\n              start: startIndex,\n              end: endIndex\n            });\n          }\n        }\n        \n        // 最终内容块数组\n        let blocks = [];\n        \n        // 先添加所有任务块\n        for (const marker of markers.filter(m => m.type === 'task-block')) {\n          blocks.push({\n            type: 'task-block',\n            id: marker.id,\n            content: marker.content,\n            position: marker.start\n          });\n        }\n        \n        // 添加所有非任务块标记\n        for (const marker of markers.filter(m => m.type !== 'task-block')) {\n          // 检查该标记是否在任务块覆盖的区域内\n          let isInsideTaskBlock = false;\n          // 检查标记的中心点是否在任务块内，或者大部分内容是否在任务块内\n          const markerLength = marker.end - marker.start;\n          let coveredCount = 0;\n          \n          for (let i = marker.start; i < marker.end; i++) {\n            if (coveredPositions[i]) {\n              coveredCount++;\n            }\n          }\n          \n          // 如果超过70%的内容在任务块内，则认为它是任务块的一部分\n          if (coveredCount / markerLength > 0.7) {\n            isInsideTaskBlock = true;\n            // 输出日志，记录过滤掉的代码块内容\n            if (marker.type === 'code') {\n              console.log('过滤掉任务块内的代码块:', marker.content.substring(0, 50) + (marker.content.length > 50 ? '...' : ''));\n            }\n          }\n          \n          // 如果不在任务块内，才添加到blocks中\n          if (!isInsideTaskBlock) {\n          if (marker.type === 'code') {\n            blocks.push({\n              type: 'code',\n              content: marker.content,\n              isJson: marker.isJson,\n              position: marker.start\n            });\n          } else if (marker.type === 'status-group') {\n            blocks.push({\n              type: 'status-group',\n              items: marker.items,\n              expanded: false,\n              position: marker.start\n            });\n            }\n          }\n        }\n        \n        // 处理文本间隙：将未被任何标记覆盖的内容作为文本块添加\n        let textStart = 0;\n        let inText = false;\n        \n        for (let i = 0; i < filteredContent.length; i++) {\n          // 检查当前位置是否被任何标记覆盖\n          let isMarked = false;\n          for (const marker of markers) {\n            if (i >= marker.start && i < marker.end) {\n              isMarked = true;\n              break;\n            }\n          }\n          \n          // 如果没有被标记，且不是任务块区域，则为普通文本\n          if (!isMarked && !coveredPositions[i]) {\n            if (!inText) {\n              // 开始一个新的文本块\n              textStart = i;\n              inText = true;\n            }\n          } else if (inText) {\n            // 结束当前文本块\n            const textContent = filteredContent.substring(textStart, i).trim();\n            if (textContent) {\n              blocks.push({\n                type: 'text',\n                content: textContent,\n                position: textStart\n              });\n            }\n            inText = false;\n          }\n        }\n        \n        // 处理最后一个可能的文本块\n        if (inText) {\n          const textContent = filteredContent.substring(textStart).trim();\n          if (textContent) {\n            blocks.push({\n              type: 'text',\n              content: textContent,\n              position: textStart\n            });\n          }\n        }\n        \n        // 按照原始位置排序所有内容块\n        blocks.sort((a, b) => {\n          const posA = a.position !== undefined ? a.position : Infinity;\n          const posB = b.position !== undefined ? b.position : Infinity;\n          return posA - posB;\n        });\n        \n        // 去除位置信息（不需要传递给UI）\n        blocks = blocks.map(item => {\n          // eslint-disable-next-line no-unused-vars\n          const { position, ...rest } = item;\n          return rest;\n        });\n        \n        // 添加总结日志\n        const blockTypeCounts = blocks.reduce((counts, block) => {\n          counts[block.type] = (counts[block.type] || 0) + 1;\n          return counts;\n        }, {});\n        \n        console.log(\"解析完成，内容块总数:\", blocks.length);\n        console.log(\"各类型块数量:\", blockTypeCounts);\n        \n        contentBlocks.value = blocks;\n        \n        // 启动打字机效果\n        if (typingIntervalRef) {\n          clearInterval(typingIntervalRef);\n        }\n        typingIntervalRef = startTypingAnimation();\n      }\n  \n      const scrollToTop = () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' })\n      }\n  \n      // 选择文件进行预览\n      const selectFile = (file) => {\n        console.log(`预览文件: ${file.fileName}, 类型: ${file.fileType}, 路径: ${file.filePath}`);\n        \n        // 对于图片文件，先检查是否存在\n        if (file.fileType === 'image') {\n          checkAndPreviewImage(file);\n        } else {\n          selectedFile.value = file;\n        }\n        \n        // 如果已经打开了代码块详情，则关闭它\n        if (selectedCodeBlock.value) {\n          selectedCodeBlock.value = null;\n        }\n      }\n  \n      // 检查图片是否存在并预览\n      const checkAndPreviewImage = (file) => {\n        // 先检查原始URL格式 storyteller/output/iterations/iteration_X/charts/\n        // const originalUrlPattern = /storyteller\\/output\\/iterations\\/iteration_\\d+\\/charts\\//;\n        \n        // 尝试的路径数组\n        const pathsToTry = [\n          file.filePath, // 原始路径\n          `/${file.filePath}`, // 添加前导斜杠\n          `/storyteller/output/iterations/iteration_1/charts/${file.fileName}`, // 最可能的路径\n          `/storyteller/output/iterations/iteration_2/charts/${file.fileName}`,\n          `/storyteller/output/iterations/iteration_3/charts/${file.fileName}`,\n          `/storyteller/output/visualizations/${file.fileName}`,\n          `/storyteller/output/images/${file.fileName}`,\n          `/storyteller/output/charts/${file.fileName}`\n        ];\n        \n        console.log(`尝试加载图片: ${file.fileName}，共${pathsToTry.length}个可能路径`);\n        tryLoadImage(pathsToTry, 0, file);\n      }\n  \n      // 递归尝试加载不同路径的图片\n      const tryLoadImage = (paths, index, file) => {\n        if (index >= paths.length) {\n          // 所有路径都尝试过了，显示错误\n          console.error(`无法加载图片，所有路径都失败: ${file.fileName}`);\n          return;\n        }\n        \n        const img = new Image();\n        img.onload = () => {\n          // 图片加载成功\n          console.log(`图片在替代路径加载成功: ${paths[index]}`);\n          file.filePath = paths[index]; // 更新文件路径\n          selectedFile.value = file;\n        };\n        img.onerror = () => {\n          // 尝试下一个路径\n          tryLoadImage(paths, index + 1, file);\n        };\n        img.src = paths[index];\n      }\n  \n      // 关闭文件预览\n      const closeFilePreview = () => {\n        selectedFile.value = null\n      }\n  \n      // 在动画完成后扫描显示iterations目录下的所有文件\n      const scanIterationsDirectory = async () => {\n        console.log(\"开始扫描本地目录下的文件...\");\n        \n        // 清空当前文件列表\n        generatedFiles.value = [];\n        \n        // 结果数组\n        const foundFiles = [];\n        \n        try {\n          // 要扫描的目录 - 这些路径用于fetch请求 - 减少路径数量，只扫描高优先级目录\n          const highPriorityPaths = [\n            \"/storyteller/output/iterations/iteration_1/charts\",\n            \"/storyteller/output/iterations/iteration_1/reports\",\n            \"/storyteller/output/iterations/iteration_2/charts\",\n            \"/storyteller/output/iterations/iteration_3/charts\"\n          ];\n          \n          // 创建一个工具函数，用于带超时的获取文件\n          const fetchWithTimeout = async (url, options = {}, timeout = 1000) => {\n            const controller = new AbortController();\n            const id = setTimeout(() => controller.abort(), timeout);\n            \n            try {\n              const response = await fetch(url, {\n                ...options,\n                signal: controller.signal\n              });\n              clearTimeout(id);\n              return response;\n            } catch (error) {\n              clearTimeout(id);\n              throw error;\n            }\n          };\n          \n          // 直接尝试常见的报告文件 - 最高优先级\n          const commonReportFiles = [\n            \"/storyteller/output/iterations/iteration_1/reports/report.md\",\n            \"/storyteller/output/iterations/iteration_1/report.md\",\n            \"/storyteller/output/iterations/iteration_1/reports/summary.md\",\n            \"/storyteller/output/iterations/iteration_2/reports/report.md\"\n          ];\n          \n          // 并行检查报告文件\n          const reportFilePromises = commonReportFiles.map(async (filePath) => {\n            try {\n              const response = await fetchWithTimeout(filePath, { method: 'HEAD' }, 800);\n              if (response.ok) {\n                console.log(`找到报告文件: ${filePath}`);\n                const fileName = filePath.split('/').pop();\n                foundFiles.push({\n                  fileName,\n                  filePath,\n                  fileType: 'markdown',\n                  priority: 1 // 高优先级\n                });\n                return true;\n              }\n            } catch (err) {\n              // 忽略错误\n            }\n            return false;\n          });\n          \n          // 等待所有报告文件检查完成\n          await Promise.all(reportFilePromises);\n          \n          // 常见的图表文件\n          const commonChartFiles = [\n            \"/storyteller/output/iterations/iteration_1/charts/Comparison of purchase amount by gender.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/Comparison of product category preferences across different age groups.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/Analysis of correlation between purchase amount and previous purchases.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/Customer segmentation based on purchase behavior.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/AgeDistribution.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/GenderDistribution.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/PurchaseAmountDistribution.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/CategoryPreference.png\",\n            \"/storyteller/output/iterations/iteration_1/charts/CustomerSegmentation.png\"\n          ];\n          \n          // 并行检查常见图表文件\n          const chartFilePromises = commonChartFiles.map(async (filePath) => {\n            try {\n              const response = await fetchWithTimeout(filePath, { method: 'HEAD' }, 800);\n              if (response.ok) {\n                console.log(`找到图表文件: ${filePath}`);\n                const fileName = filePath.split('/').pop();\n                foundFiles.push({\n                  fileName,\n                  filePath,\n                  fileType: 'image',\n                  priority: 2 // 次高优先级\n                });\n                return true;\n              }\n            } catch (err) {\n              // 忽略错误\n            }\n            return false;\n          });\n          \n          // 等待所有图表文件检查完成\n          await Promise.all(chartFilePromises);\n          \n          // 如果已经找到了足够的文件（至少1个报告和3个图表），则直接返回结果\n          const foundReports = foundFiles.filter(f => f.fileType === 'markdown').length;\n          const foundCharts = foundFiles.filter(f => f.fileType === 'image').length;\n          \n          if (foundReports >= 1 && foundCharts >= 3) {\n            console.log(\"已找到足够的文件，跳过后续扫描\");\n          } else {\n            // 如果没有找到足够的文件，则继续扫描常见目录\n            // 仅在前面的快速扫描没有找到足够文件时执行\n            \n            // 并行扫描所有高优先级目录\n            const scanPromises = highPriorityPaths.map(dirPath => {\n              return scanHighPriorityDirectory(dirPath, foundFiles);\n            });\n            \n            await Promise.all(scanPromises);\n          }\n        } catch (err) {\n          console.error(\"扫描过程中发生错误:\", err);\n        }\n        \n        // 如果找到了文件，添加到生成文件列表并显示\n        if (foundFiles.length > 0) {\n          console.log(`总共找到 ${foundFiles.length} 个文件`);\n          \n          // 去除重复文件\n          const uniqueFiles = [];\n          const seenPaths = new Set();\n          \n          for (const file of foundFiles) {\n            if (!seenPaths.has(file.filePath)) {\n              seenPaths.add(file.filePath);\n              uniqueFiles.push(file);\n            }\n          }\n          \n          // 按优先级和文件类型排序\n          uniqueFiles.sort((a, b) => {\n            // 首先按优先级排序\n            const priorityA = a.priority || 999;\n            const priorityB = b.priority || 999;\n            if (priorityA !== priorityB) {\n              return priorityA - priorityB;\n            }\n            \n            // 其次按文件类型排序\n            const typeOrder = { 'markdown': 1, 'image': 2, 'html': 3, 'json': 4, 'csv': 5, 'text': 6, 'other': 7 };\n            const typeA = typeOrder[a.fileType] || 999;\n            const typeB = typeOrder[b.fileType] || 999;\n            return typeA - typeB;\n          });\n          \n          // 更新生成文件列表\n          generatedFiles.value = uniqueFiles;\n          \n          // 创建内容块显示找到的文件\n          const fileDisplayBlock = {\n            type: 'text',\n            content: `## 扫描结果\\n共找到 ${uniqueFiles.length} 个文件:`\n          };\n          \n          // 移除现有的扫描结果和文件块\n          contentBlocks.value = contentBlocks.value.filter(\n            block => !(\n              (block.type === 'text' && \n               (block.content.includes('扫描结果') || block.content.includes('文件 ('))) || \n              block.type === 'file'\n            )\n          );\n          \n          // 添加标题块\n          contentBlocks.value.push(fileDisplayBlock);\n          \n          // 分类文件\n          const imageFiles = uniqueFiles.filter(file => file.fileType === 'image');\n          const docFiles = uniqueFiles.filter(file => ['markdown', 'html', 'text'].includes(file.fileType));\n          const dataFiles = uniqueFiles.filter(file => ['json', 'csv'].includes(file.fileType));\n          const otherFiles = uniqueFiles.filter(file => \n            !['image', 'markdown', 'html', 'text', 'json', 'csv'].includes(file.fileType)\n          );\n          \n          // 先添加文档文件（优先级最高）\n          if (docFiles.length > 0) {\n            contentBlocks.value.push({\n              type: 'text',\n              content: `### 文档文件 (${docFiles.length}个)`\n            });\n            \n            for (const file of docFiles) {\n              contentBlocks.value.push({\n                type: 'file',\n                fileName: file.fileName,\n                filePath: file.filePath,\n                fileType: file.fileType\n              });\n            }\n            \n            // 自动在右侧显示report.md文件\n            setTimeout(() => {\n              // 寻找report.md文件\n              const reportFile = docFiles.find(file => \n                file.fileName.toLowerCase() === 'report.md' || \n                file.fileName.toLowerCase().includes('report') && file.fileType === 'markdown'\n              );\n              \n              if (reportFile) {\n                console.log('找到report.md文件，自动显示在右侧面板', reportFile);\n                selectFile(reportFile);\n              } else {\n                // 如果没有找到report.md，尝试找任何markdown文件\n                const anyMarkdown = docFiles.find(file => file.fileType === 'markdown');\n                if (anyMarkdown) {\n                  console.log('未找到report.md文件，显示第一个可用的Markdown文件', anyMarkdown);\n                  selectFile(anyMarkdown);\n                }\n              }\n            }, 500); // 减少延迟时间\n          }\n          \n          // 添加图片文件\n          if (imageFiles.length > 0) {\n            contentBlocks.value.push({\n              type: 'text',\n              content: `### 图片文件 (${imageFiles.length}个)`\n            });\n            \n            for (const file of imageFiles) {\n              contentBlocks.value.push({\n                type: 'file',\n                fileName: file.fileName,\n                filePath: file.filePath,\n                fileType: file.fileType\n              });\n            }\n          }\n          \n          // 添加数据文件\n          if (dataFiles.length > 0) {\n            contentBlocks.value.push({\n              type: 'text',\n              content: `### 数据文件 (${dataFiles.length}个)`\n            });\n            \n            for (const file of dataFiles) {\n              contentBlocks.value.push({\n                type: 'file',\n                fileName: file.fileName,\n                filePath: file.filePath,\n                fileType: file.fileType\n              });\n            }\n          }\n          \n          // 添加其他文件\n          if (otherFiles.length > 0) {\n            contentBlocks.value.push({\n              type: 'text',\n              content: `### 其他文件 (${otherFiles.length}个)`\n            });\n            \n            for (const file of otherFiles) {\n              contentBlocks.value.push({\n                type: 'file',\n                fileName: file.fileName,\n                filePath: file.filePath,\n                fileType: file.fileType\n              });\n            }\n          }\n          \n          // 更新显示的块\n          displayedBlocks.value = [...contentBlocks.value];\n        } else {\n          console.log(\"没有找到任何文件\");\n          \n          // 添加一个提示块\n          const errorBlock = {\n            type: 'text',\n            content: '## 扫描结果\\n未找到任何文件。请检查文件路径是否正确，或者尝试其他路径。'\n          };\n          \n          // 移除现有的扫描结果和文件块\n          contentBlocks.value = contentBlocks.value.filter(\n            block => !(\n              (block.type === 'text' && \n               (block.content.includes('扫描结果') || block.content.includes('文件 ('))) || \n              block.type === 'file'\n            )\n          );\n          \n          contentBlocks.value.push(errorBlock);\n          \n          // 更新显示的块\n          displayedBlocks.value = [...contentBlocks.value];\n        }\n      };\n      \n      // 扫描高优先级目录 - 只扫描最有可能存在的文件类型\n      const scanHighPriorityDirectory = async (dirPath, foundFiles) => {\n        // 根据目录路径选择适当的文件类型\n        let fileTypes = [];\n        if (dirPath.includes('charts')) {\n          fileTypes = ['png', 'jpg', 'svg']; // 图表目录主要检查图片文件\n        } else if (dirPath.includes('reports')) {\n          fileTypes = ['md', 'html']; // 报告目录主要检查文档文件\n        } else {\n          fileTypes = ['md', 'html', 'png', 'jpg']; // 其他目录检查多种类型\n        }\n        \n        // 生成要检查的文件名数组 - 减少尝试的文件数量\n        const filesToCheck = [];\n        \n        // 添加常见的索引和报告文件\n        if (fileTypes.includes('md') || fileTypes.includes('html')) {\n          filesToCheck.push(...[\n            'report.md', 'summary.md', 'analysis.md',\n            'index.html', 'report.html'\n          ].filter(f => fileTypes.includes(f.split('.').pop())));\n        }\n        \n        // 添加常见的数字序号图表文件\n        if (fileTypes.includes('png') || fileTypes.includes('jpg') || fileTypes.includes('svg')) {\n          // 只检查前5个数字序号\n          for (let i = 1; i <= 5; i++) {\n            for (const ext of fileTypes.filter(t => ['png', 'jpg', 'svg'].includes(t))) {\n              filesToCheck.push(`chart_${i}.${ext}`);\n              filesToCheck.push(`figure_${i}.${ext}`);\n            }\n          }\n        }\n        \n        // 并行检查所有文件\n        const fetchPromises = filesToCheck.map(async (fileName) => {\n          const filePath = `${dirPath}/${fileName}`;\n          try {\n            const response = await fetchWithTimeout(filePath, { method: 'HEAD' }, 800);\n            if (response.ok) {\n              console.log(`找到文件: ${filePath}`);\n              // 确定文件类型\n              const ext = fileName.split('.').pop().toLowerCase();\n              let fileType = detectFileType(ext);\n              \n              // 添加到找到的文件列表\n              foundFiles.push({\n                fileName,\n                filePath,\n                fileType,\n                priority: fileType === 'markdown' ? 1 : (fileType === 'image' ? 2 : 3)\n              });\n              return true;\n            }\n          } catch (err) {\n            // 忽略错误\n          }\n          return false;\n        });\n        \n        // 等待所有检查完成\n        await Promise.all(fetchPromises);\n      };\n      \n      // 并设置一个带超时的fetch工具函数\n      const fetchWithTimeout = async (url, options = {}, timeout = 1000) => {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        \n        try {\n          const response = await fetch(url, {\n            ...options,\n            signal: controller.signal\n          });\n          clearTimeout(id);\n          return response;\n        } catch (error) {\n          clearTimeout(id);\n          throw error;\n        }\n      };\n      \n      // 根据扩展名检测文件类型\n      const detectFileType = (ext) => {\n        if (['png', 'jpg', 'jpeg', 'gif', 'svg'].includes(ext)) {\n          return 'image';\n        } else if (ext === 'md') {\n          return 'markdown';\n        } else if (ext === 'html') {\n          return 'html';\n        } else if (['json', 'csv'].includes(ext)) {\n          return ext;\n        } else if (ext === 'txt') {\n          return 'text';\n        } else {\n          return 'other';\n        }\n      };\n  \n      return {\n        query,\n        isDatasetPreviewVisible,\n        datasetHeaders,\n        datasetRows,\n        isLoading,\n        datasetError,\n        fullScreenImage,\n        introContent,\n        contentBlocks,\n        displayedBlocks,\n        isTypingComplete,\n        typingSpeed,\n        selectedCodeBlock,\n        selectCodeBlock,\n        closeCodeDetail,\n        getCodePreview,\n        formatTextWithHighlights,\n        openFullScreenImage,\n        closeFullScreenImage,\n        toggleDatasetPreview,\n        loadDataset,\n        showBackToTop,\n        scrollToTop,\n        skipTypingAnimation,\n        selectedFile,\n        selectFile,\n        closeFilePreview,\n        scanIterationsDirectory\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  /* Main container */\n  .main-container {\n    display: flex;\n    flex: 1;\n    position: relative;\n    overflow: hidden;\n    height: calc(100vh - 60px);\n  }\n  \n  /* Chat container styles */\n  .chat-container {\n    width: 56%;\n    overflow-y: auto;\n    padding: 10px;\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n    scroll-padding: 24px;\n  }\n  \n  .chat-messages {\n    max-width: 800px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n  }\n  \n  .message-group {\n    display: flex;\n    width: 100%;\n    margin-bottom: 8px;\n  }\n  \n  .avatar {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n  }\n  \n  .user-avatar {\n    background-color: #f0f0f0;\n    color: #666;\n    margin-left: 16px;\n  }\n  \n  .ai-avatar {\n    background-color: transparent;\n    color: #1890ff;\n    margin-right: 16px;\n  }\n  \n  .avatar-icon {\n    font-size: 20px;\n  }\n  \n  .message-content {\n    max-width: 85%;\n  }\n  \n  .user-content {\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n  \n  .ai-content {\n    margin-right: auto;\n    width: auto;\n    max-width: 100%;\n  }\n  \n  .message-bubble {\n    padding: 12px 16px;\n    border-radius: 8px;\n    margin-bottom: 8px;\n    position: relative;\n  }\n  \n  .user-bubble {\n    background-color: #ffffff;\n    border: 1px solid #e0e0e0;\n    border-bottom-right-radius: 0;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  }\n  \n  .ai-bubble {\n    background-color: transparent;\n    padding: 0;\n    border: none;\n    margin-bottom: 0;\n  }\n  \n  .ai-bubble > p {\n    color: #333;\n    font-size: 1em;\n    margin-bottom: 16px;\n  }\n  \n  /* AI response content styling */\n  .ai-response-content {\n    margin-top: 8px;\n    color: #777;\n    font-size: 0.92em;\n  }\n  \n  .content-block {\n    margin-bottom: 8px;\n  }\n  \n  .text-block {\n    white-space: pre-line;\n    line-height: 1.6;\n    color: #777;\n  }\n  \n  .attachment-section {\n    margin-top: 8px;\n    align-self: flex-end;\n  }\n  \n  .attachment-card {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    border: 1px solid #e0e0e0;\n    border-radius: 6px;\n    padding: 12px;\n    cursor: pointer;\n    transition: all 0.2s;\n    max-width: 300px;\n  }\n  \n  .attachment-card:hover {\n    background-color: #f9f9f9;\n    border-color: #d0d0d0;\n  }\n  \n  .attachment-icon {\n    font-size: 24px;\n    margin-right: 12px;\n    color: #1890ff;\n  }\n  \n  .attachment-info {\n    flex: 1;\n  }\n  \n  .attachment-name {\n    font-weight: 500;\n    color: #333;\n    margin-bottom: 2px;\n  }\n  \n  .attachment-meta {\n    font-size: 12px;\n    color: #666;\n  }\n  \n  /* Fullscreen image preview */\n  .fullscreen-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n  \n  .fullscreen-image-container {\n    position: relative;\n    max-width: 90%;\n    max-height: 90%;\n  }\n  \n  .fullscreen-image {\n    max-width: 100%;\n    max-height: 90vh;\n    object-fit: contain;\n    border: 2px solid #fff;\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);\n  }\n  \n  .close-button {\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    width: 40px;\n    height: 40px;\n    background-color: #fff;\n    border: none;\n    border-radius: 50%;\n    font-size: 24px;\n    line-height: 1;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #333;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  }\n  \n  .close-button:hover {\n    background-color: #f0f0f0;\n  }\n  \n  /* Detail panel fixed position styles */\n  .detail-panel {\n    position: fixed;\n    top: 70px; /* 考虑头部标题栏高度 */\n    right: 0;\n    bottom: 20px;\n    width: 43%; \n    background-color: white;\n    border-left: 1px solid #e0e0e0;\n    border-radius: 10px;\n    overflow-y: auto;\n    z-index: 10;\n    display: flex;\n    flex-direction: column;\n    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.05);\n    padding: 24px; /* 从16px增加到24px，增加右侧内边距 */\n  }\n  \n  .detail-panel .close-btn {\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n    color: #999;\n    z-index: 15;\n  }\n  \n  .detail-panel .close-btn:hover {\n    color: #333;\n  }\n  \n  /* 恢复左侧代码块预览样式 */\n  .code-block-preview {\n    display: flex;\n    align-items: center;\n    background-color: #f8f8f8;\n    border: 1px solid #e0e0e0;\n    border-left: 3px solid #1890ff;\n    border-radius: 4px;\n    padding: 12px;\n    cursor: pointer;\n    transition: all 0.2s;\n    margin-top: 8px; /* 从12px减少到8px */\n    margin-bottom: 8px; /* 从12px减少到8px */\n    opacity: 0.85;\n  }\n  \n  .code-block-preview:hover {\n    background-color: #f0f0f0;\n    border-color: #d0d0d0;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  }\n  \n  .code-block-icon {\n    font-size: 20px;\n    margin-right: 12px;\n    color: #1890ff;\n    background-color: rgba(24, 144, 255, 0.1);\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .code-block-info {\n    flex: 1;\n    overflow: hidden;\n  }\n  \n  .code-block-title {\n    font-weight: 500;\n    color: #666;\n    margin-bottom: 4px;\n  }\n  \n  .code-block-preview-text {\n    font-family: monospace;\n    font-size: 12px;\n    color: #999;\n    white-space: pre-line;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-height: 40px;\n    line-height: 1.4;\n  }\n  \n  @media (max-width: 1024px) {\n    .chat-container {\n      width: 100%;\n    }\n    \n    .detail-panel {\n      display: none; /* 小屏幕上隐藏详情面板 */\n    }\n  }\n  \n  /* 增加滚动条样式使其更易于控制 */\n  .chat-container::-webkit-scrollbar {\n    width: 12px;\n  }\n  \n  .chat-container::-webkit-scrollbar-track {\n    background: #f8f8f8;\n    border-radius: 6px;\n  }\n  \n  .chat-container::-webkit-scrollbar-thumb {\n    background: #ccc;\n    border-radius: 6px;\n    border: 3px solid #f8f8f8;\n  }\n  \n  .chat-container::-webkit-scrollbar-thumb:hover {\n    background: #aaa;\n  }\n  \n  .highlight {\n    background-color: rgba(24, 144, 255, 0.1);\n    padding: 2px 4px;\n    border-radius: 3px;\n    font-weight: 500;\n    color: #1890ff;\n  }\n  \n  /* 动作标签样式 */\n  .action-tag {\n    display: inline-block;\n    font-weight: 500;\n    font-size: 0.9em;\n    padding: 2px 8px;\n    border-radius: 4px;\n    margin: 0 2px;\n    border-width: 1px;\n    border-style: solid;\n  }\n  \n  /* 测试区域样式 */\n  .test-area {\n    padding: 16px;\n    margin: 10px 0;\n    background-color: #f8f9fa;\n    border: 1px solid #e9ecef;\n    border-radius: 6px;\n    font-size: 16px;\n  }\n  \n  /* 为每个动作定义不同的颜色 */\n  .action-revise {\n    background-color: #edf7ed;\n    color: #0f766e;\n    border-color: #d1e7dd;\n  }\n  \n  .action-charts-captions {\n    background-color: #fff1f0;\n    color: #cf1322;\n    border-color: #ffccc7;\n  }\n  \n  .action-captions-summaries {\n    background-color: #e6f4ff;\n    color: #0958d9;\n    border-color: #bae0ff;\n  }\n  \n  .action-chapter-tasks {\n    background-color: #f6ffed;\n    color: #389e0d;\n    border-color: #d9f7be;\n  }\n  \n  .action-query-chapters {\n    background-color: #fff7e6;\n    color: #d46b08;\n    border-color: #ffe7ba;\n  }\n  \n  .action-tasks-charts {\n    background-color: #f9f0ff;\n    color: #722ed1;\n    border-color: #efdbff;\n  }\n  \n  /* 测试状态标签样式 */\n  .state-wrapper {\n    display: inline-block;\n    margin: 2px 0;\n  }\n  \n  .state-tag {\n    display: inline-block;\n    background-color: #f5f5f5;\n    color: #595959;\n    font-weight: 500;\n    font-size: 0.95em;\n    padding: 2px 8px;\n    border-radius: 4px;\n    border: 1px solid #d9d9d9;\n    margin: 0 2px;\n  }\n  \n  /* 回到顶部按钮 */\n  .back-to-top {\n    position: fixed;\n    top: 80px; /* 改为顶部位置 */\n    right: 20px;\n    width: 40px;\n    height: 40px;\n    background-color: rgba(255, 255, 255, 0.9);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n    transition: all 0.3s;\n    z-index: 100; /* 确保按钮在其他元素上方 */\n  }\n  \n  .back-to-top:hover {\n    background-color: rgba(255, 255, 255, 1);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  }\n  \n  .back-to-top-icon {\n    font-size: 20px;\n    color: #1890ff; /* 蓝色图标 */\n    font-weight: bold;\n  }\n  \n  .html-preview {\n    width: 100%;\n    height: 100%;\n    border: none;\n  }\n  \n  .image-preview {\n    max-width: 100%;\n    max-height: 90vh;\n    object-fit: contain;\n    margin: 0 auto;\n    display: block;\n    padding: 20px;\n    background-color: #f8f8f8;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  }\n\n  /* 显示所有生成文件按钮 */\n  .show-files-button {\n    position: fixed;\n    top: 130px; /* 调整位置以避免与按钮重叠 */\n    right: 20px;\n    width: 40px;\n    height: 40px;\n    background-color: rgba(255, 255, 255, 0.9);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n    transition: all 0.3s;\n    z-index: 100;\n  }\n\n  .show-files-button:hover {\n    background-color: rgba(255, 255, 255, 1);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  }\n\n  .show-files-button:hover .tooltip {\n    opacity: 1;\n    transform: translateX(-100%) translateY(-50%);\n  }\n\n  .show-files-icon {\n    font-size: 20px;\n    color: #1890ff;\n    font-weight: bold;\n  }\n  \n  .tooltip {\n    position: absolute;\n    left: -10px;\n    top: 50%;\n    transform: translateX(-80%) translateY(-50%);\n    background-color: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 12px;\n    white-space: nowrap;\n    opacity: 0;\n    transition: all 0.3s;\n    pointer-events: none;\n  }\n  \n  .tooltip:after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: -4px;\n    transform: translateY(-50%);\n    border-width: 4px 0 4px 4px;\n    border-style: solid;\n    border-color: transparent transparent transparent rgba(0, 0, 0, 0.7);\n  }\n\n  /* 跳过动画按钮 */\n  .skip-animation-button {\n    position: fixed;\n    top: 180px; /* 位于文件按钮下方 */\n    right: 20px;\n    width: 40px;\n    height: 40px;\n    background-color: rgba(255, 255, 255, 0.9);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);\n    transition: all 0.3s;\n    z-index: 100;\n  }\n\n  .skip-animation-button:hover {\n    background-color: rgba(255, 255, 255, 1);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  }\n\n  .skip-animation-button:hover .tooltip {\n    opacity: 1;\n    transform: translateX(-100%) translateY(-50%);\n  }\n\n  .skip-animation-icon {\n    font-size: 20px;\n    color: #ff4d4f; /* 红色图标，更显眼 */\n    font-weight: bold;\n  }\n  </style>","<template>\n  <div class=\"dataset-modal\">\n    <div class=\"dataset-container\">\n      <div class=\"dataset-header\">\n        <h2>Dataset Preview: shopping.csv</h2>\n        <button class=\"close-btn\" @click=\"$emit('close')\">×</button>\n      </div>\n      <div class=\"dataset-content\">\n        <div v-if=\"isLoading\" class=\"dataset-loading\">\n          <div class=\"loading-spinner\"></div>\n          <div>Loading dataset...</div>\n        </div>\n        \n        <div v-else-if=\"datasetError\" class=\"dataset-error\">\n          <div class=\"error-icon\">⚠️</div>\n          <div class=\"error-message\">{{ datasetError }}</div>\n        </div>\n        \n        <div v-else-if=\"datasetHeaders.length > 0\" class=\"dataset-table-wrapper\">\n          <table class=\"dataset-table\">\n            <thead>\n              <tr>\n                <th v-for=\"(header, index) in datasetHeaders\" :key=\"index\">\n                  {{ header }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, rowIndex) in datasetRows\" :key=\"rowIndex\">\n                <td v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\">\n                  {{ cell }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \n        <div v-else class=\"dataset-empty\">\n          No data available\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DatasetPreview',\n  props: {\n    isLoading: {\n      type: Boolean,\n      required: true\n    },\n    datasetError: {\n      type: String,\n      default: null\n    },\n    datasetHeaders: {\n      type: Array,\n      required: true\n    },\n    datasetRows: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['close']\n}\n</script>\n\n<style scoped>\n.dataset-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dataset-container {\n  background-color: white;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 1200px;\n  height: 80%;\n  max-height: 800px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);\n}\n\n.dataset-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 24px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.dataset-header h2 {\n  margin: 0;\n  font-size: 20px;\n  font-weight: 500;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #999;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n}\n\n.close-btn:hover {\n  color: #333;\n}\n\n.dataset-content {\n  flex: 1;\n  padding: 24px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.dataset-loading, \n.dataset-error, \n.dataset-empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: #666;\n  gap: 16px;\n}\n\n.loading-spinner {\n  width: 48px;\n  height: 48px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #1890ff;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.error-icon {\n  font-size: 36px;\n}\n\n.error-message {\n  text-align: center;\n  max-width: 400px;\n}\n\n.dataset-table-wrapper {\n  overflow: auto;\n  height: 100%;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n}\n\n.dataset-table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 14px;\n}\n\n.dataset-table th,\n.dataset-table td {\n  padding: 12px 16px;\n  text-align: left;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.dataset-table th {\n  background-color: #f5f5f5;\n  font-weight: 500;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n}\n\n.dataset-table tbody tr:hover {\n  background-color: #f9f9f9;\n}\n\n.dataset-table td {\n  white-space: nowrap;\n}\n</style> ","import { render } from \"./DatasetPreview.vue?vue&type=template&id=25962510&scoped=true\"\nimport script from \"./DatasetPreview.vue?vue&type=script&lang=js\"\nexport * from \"./DatasetPreview.vue?vue&type=script&lang=js\"\n\nimport \"./DatasetPreview.vue?vue&type=style&index=0&id=25962510&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-25962510\"]])\n\nexport default __exports__","<template>\n  <div class=\"code-block-card\" :class=\"{ 'collapsed': isCollapsed }\">\n    <div class=\"code-block-header\">\n      <div class=\"code-block-title\">\n        <div class=\"code-icon\">💻</div>\n        <div class=\"code-type\">{{ codeType }}</div>\n      </div>\n      <div class=\"code-block-actions\">\n        <button class=\"collapse-btn\" @click=\"toggleCollapse\">\n          {{ isCollapsed ? 'expand' : 'collapse' }}\n        </button>\n      </div>\n    </div>\n    <div class=\"code-block-content\" v-if=\"!isCollapsed\">\n      <pre><code>{{ content }}</code></pre>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CodeBlock',\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    isJson: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isCollapsed: false\n    }\n  },\n  computed: {\n    codeType() {\n      if (this.isJson) {\n        return 'JSON Data'\n      }\n      return 'Code'\n    }\n  },\n  methods: {\n    toggleCollapse() {\n      this.isCollapsed = !this.isCollapsed\n    }\n  }\n}\n</script>\n\n<style scoped>\n.code-block-card {\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  border: 1px solid #e0e0e0;\n  margin-bottom: 16px;\n  margin-top: 16px;\n  overflow: hidden;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n  top: 20px;\n}\n\n.code-block-card.collapsed {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.code-block-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  background-color: #f8f8f8;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.code-block-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: #333333;\n}\n\n.code-icon {\n  font-size: 16px;\n}\n\n.code-type {\n  font-size: 14px;\n}\n\n.code-block-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.collapse-btn {\n  background: none;\n  border: none;\n  color: #666666;\n  font-size: 12px;\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n.collapse-btn:hover {\n  background-color: #f0f0f0;\n  color: #333333;\n}\n\n.code-block-content {\n  padding: 16px;\n  overflow-x: auto;\n}\n\n.code-block-content pre {\n  margin: 0;\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  font-size: 13px;\n  line-height: 1.5;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n</style> ","import { render } from \"./CodeBlock.vue?vue&type=template&id=ceb189f4&scoped=true\"\nimport script from \"./CodeBlock.vue?vue&type=script&lang=js\"\nexport * from \"./CodeBlock.vue?vue&type=script&lang=js\"\n\nimport \"./CodeBlock.vue?vue&type=style&index=0&id=ceb189f4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ceb189f4\"]])\n\nexport default __exports__","<template>\n  <div class=\"status-group-block\">\n    <div class=\"status-group-header\" @click=\"toggleExpanded\">\n      <div class=\"status-group-icon\">📋</div>\n      <div class=\"status-group-title\">\n        <span v-if=\"items.length > 0 && items[0].content\">{{ getDisplayTitle(items[0].content) }}</span>\n        <span class=\"step-count\">({{ Math.floor(items.length / 2) }}步)</span>\n      </div>\n      <div class=\"status-group-toggle\">{{ expanded ? 'collapse' : 'expand' }}</div>\n    </div>\n    <div v-if=\"expanded\" class=\"status-timeline\">\n      <div class=\"timeline-container\">\n        <div class=\"timeline-line\"></div>\n        <div v-for=\"(item, itemIndex) in items\" :key=\"itemIndex\" class=\"status-item\">\n          <div class=\"status-marker\" :class=\"{ 'completed': item.status === 'generated' }\"></div>\n          <div class=\"status-content\">\n            <div class=\"status-icon\">\n              <span v-if=\"item.status === 'generating'\">⏳</span>\n              <span v-else-if=\"item.status === 'generated'\"></span>\n            </div>\n            <div class=\"status-text\">{{ item.content }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StatusTimeline',\n  props: {\n    items: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    initialExpanded: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      expanded: this.initialExpanded\n    }\n  },\n  methods: {\n    toggleExpanded() {\n      this.expanded = !this.expanded\n    },\n    getDisplayTitle(content) {\n      // 显示完整的内容，包括\"🔍 正在生成xxx\"\n      return content;\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 生成状态组块样式 */\n.status-group-block {\n  margin: 12px 0;\n  border-radius: 8px;\n  overflow: hidden;\n  border: 1px solid #e0e0e0;\n  background-color: #fafafa;\n}\n\n.status-group-header {\n  display: flex;\n  align-items: center;\n  padding: 10px 16px;\n  background-color: #f0f0f0;\n  cursor: pointer;\n  user-select: none;\n  transition: background-color 0.2s;\n}\n\n.status-group-header:hover {\n  background-color: #e8e8e8;\n}\n\n.status-group-icon {\n  margin-right: 8px;\n  font-size: 16px;\n  color: #666;\n}\n\n.status-group-title {\n  flex: 1;\n  font-weight: 500;\n  color: #666;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.step-count {\n  margin-left: 8px;\n  font-size: 12px;\n  color: #666;\n}\n\n.status-group-toggle {\n  font-size: 12px;\n  color: #1890ff;\n  margin-left: 8px;\n}\n\n/* 时间线容器和样式 */\n.status-timeline {\n  padding: 16px;\n}\n\n.timeline-container {\n  position: relative;\n  padding-left: 24px;\n}\n\n.timeline-line {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 8px;\n  width: 2px;\n  background-color: #e0e0e0;\n}\n\n.status-item {\n  position: relative;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: flex-start;\n}\n\n.status-item:last-child {\n  margin-bottom: 0;\n}\n\n.status-marker {\n  position: absolute;\n  left: -24px;\n  top: 6px;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #1890ff;\n  border: 2px solid #fff;\n  z-index: 2;\n}\n\n.status-marker.completed {\n  background-color: #52c41a;\n}\n\n.status-content {\n  display: flex;\n  align-items: center;\n  background-color: #f5f5f5;\n  border-radius: 6px;\n  padding: 8px 12px;\n  width: 100%;\n}\n\n.status-icon {\n  margin-right: 8px;\n  font-size: 14px;\n}\n\n.status-text {\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  font-size: 13px;\n  color: #666;\n}\n</style> ","import { render } from \"./StatusTimeline.vue?vue&type=template&id=62b92465&scoped=true\"\nimport script from \"./StatusTimeline.vue?vue&type=script&lang=js\"\nexport * from \"./StatusTimeline.vue?vue&type=script&lang=js\"\n\nimport \"./StatusTimeline.vue?vue&type=style&index=0&id=62b92465&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-62b92465\"]])\n\nexport default __exports__","<template>\n  <div class=\"task-card\">\n    <div class=\"card-header\" @click=\"toggleExpand\">\n      <div class=\"task-icon\">🔍</div>\n      <div class=\"task-title\">\n        处理任务:\n        <span class=\"task-id\" v-if=\"displayId\">{{ displayId }}</span>\n      </div>\n      <div class=\"expand-button\">\n        {{ isExpanded ? '▼' : '▶' }}\n      </div>\n    </div>\n    <div class=\"card-content\" v-if=\"isExpanded\">\n      <div class=\"markdown-content\" v-html=\"formattedContent\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { marked } from 'marked';\n\nexport default {\n  name: 'TaskCard',\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    taskId: {\n      type: String,\n      default: ''\n    },\n    initialExpanded: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      isExpanded: this.initialExpanded\n    };\n  },\n  computed: {\n    // 尝试从内容中提取任务ID\n    extractedTaskId() {\n      // 匹配\"任务ID: Comparison of product category preferences across different age groups\"这种格式\n      const idMatch = this.content.match(/任务ID: ([^\"'\\n]+)/);\n      if (idMatch && idMatch[1]) {\n        return idMatch[1].trim();\n      }\n      \n      // 匹配\"任务 'Comparison of product category preferences across different age groups'\"这种格式\n      const nameMatch = this.content.match(/任务\\s+'([^']+)'/);\n      if (nameMatch && nameMatch[1]) {\n        return nameMatch[1].trim();\n      }\n      \n      return '';\n    },\n    \n    // 优先使用props传入的ID，其次使用从内容中提取的ID\n    displayId() {\n      return this.taskId || this.extractedTaskId;\n    },\n    \n    formattedContent() {\n      // 处理可能的markdown格式\n      try {\n        return marked(this.content);\n      } catch (e) {\n        return `<pre>${this.content}</pre>`;\n      }\n    }\n  },\n  methods: {\n    toggleExpand() {\n      this.isExpanded = !this.isExpanded;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.task-card {\n  margin: 12px 0;\n  border-radius: 8px;\n  border: 1px solid #e8e8e8;\n  background-color: #fafafa;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  background-color: #f0f0f0;\n  border-bottom: 1px solid #e0e0e0;\n  cursor: pointer;\n}\n\n.task-icon {\n  font-size: 18px;\n  margin-right: 8px;\n}\n\n.task-title {\n  font-weight: 500;\n  color: #666;\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.task-id {\n  font-size: 0.8em;\n  color: #666;\n  margin-left: 8px;\n  font-weight: normal;\n  max-width: 70%; /* 限制ID的最大宽度 */\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.expand-button {\n  color: #666;\n  font-size: 14px;\n  transition: transform 0.2s;\n}\n\n.card-content {\n  padding: 16px;\n  background-color: white;\n  max-width: 100%;\n  box-sizing: border-box;\n}\n\n.markdown-content {\n  line-height: 1.6;\n  color: #666;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  padding-right: 8px;\n}\n\n.markdown-content :deep(ul) {\n  padding-left: 20px;\n  margin: 8px 0;\n}\n\n.markdown-content :deep(li) {\n  margin-bottom: 6px;\n}\n\n.markdown-content :deep(code) {\n  background-color: #f5f5f5;\n  padding: 2px 4px;\n  border-radius: 4px;\n  font-family: 'Courier New', monospace;\n  font-size: 0.9em;\n}\n\n.markdown-content :deep(pre) {\n  background-color: #f5f5f5;\n  padding: 12px;\n  border-radius: 4px;\n  overflow-x: auto;\n  white-space: pre-wrap;\n}\n\n.markdown-content :deep(pre code) {\n  background-color: transparent;\n  padding: 0;\n}\n</style> ","import { render } from \"./TaskCard.vue?vue&type=template&id=8accfa84&scoped=true\"\nimport script from \"./TaskCard.vue?vue&type=script&lang=js\"\nexport * from \"./TaskCard.vue?vue&type=script&lang=js\"\n\nimport \"./TaskCard.vue?vue&type=style&index=0&id=8accfa84&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8accfa84\"]])\n\nexport default __exports__","<template>\n  <div class=\"markdown-preview\">\n    <div class=\"markdown-header\">\n      <h3 class=\"markdown-title\">{{ fileName }}</h3>\n    </div>\n    <div class=\"markdown-content\" v-html=\"renderedContent\"></div>\n    <div v-if=\"isLoading\" class=\"loading-indicator\">加载中...</div>\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted, watch } from 'vue';\n\n// 将Markdown转换为HTML\nconst renderMarkdown = (text) => {\n  try {\n    // 尝试导入marked库\n    let marked;\n    try {\n      marked = require('marked');\n      // 使用marked库渲染\n      return marked.parse(text);\n    } catch (e) {\n      // marked库未找到，使用简单格式化\n      console.warn('marked库未找到，使用简单格式化');\n      return simpleMarkdownToHtml(text);\n    }\n  } catch (e) {\n    console.error('Markdown渲染失败:', e);\n    return simpleMarkdownToHtml(text);\n  }\n};\n\n// 简单的Markdown到HTML转换\nconst simpleMarkdownToHtml = (text) => {\n  // 转义HTML\n  let html = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  \n  // 处理标题\n  html = html.replace(/^### (.*?)$/gm, '<h3>$1</h3>');\n  html = html.replace(/^## (.*?)$/gm, '<h2>$1</h2>');\n  html = html.replace(/^# (.*?)$/gm, '<h1>$1</h1>');\n  \n  // 处理列表\n  html = html.replace(/^\\* (.*?)$/gm, '<li>$1</li>');\n  html = html.replace(/^- (.*?)$/gm, '<li>$1</li>');\n  html = html.replace(/^(\\d+)\\. (.*?)$/gm, '<li>$2</li>');\n  \n  // 处理段落\n  html = html.replace(/\\n\\n/g, '</p><p>');\n  \n  // 处理代码块\n  html = html.replace(/```([\\s\\S]*?)```/g, '<pre><code>$1</code></pre>');\n  \n  // 处理行内代码\n  html = html.replace(/`([^`]+)`/g, '<code>$1</code>');\n  \n  // 处理粗体\n  html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n  \n  // 处理斜体\n  html = html.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n  \n  // 包装成段落\n  html = '<p>' + html + '</p>';\n  \n  // 修复列表格式\n  html = html.replace(/<\\/li><p>/g, '</li>');\n  html = html.replace(/<\\/p><li>/g, '<li>');\n  \n  return html;\n};\n\nexport default defineComponent({\n  name: 'MarkdownPreview',\n  props: {\n    filePath: {\n      type: String,\n      required: true\n    },\n    fileName: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const renderedContent = ref('');\n    const isLoading = ref(true);\n    const error = ref(null);\n\n    const fetchMarkdownContent = async () => {\n      try {\n        isLoading.value = true;\n        error.value = null;\n        \n        const response = await fetch(props.filePath);\n        if (!response.ok) {\n          throw new Error(`无法加载文件 (${response.status})`);\n        }\n\n        const markdownText = await response.text();\n        \n        // 使用renderMarkdown函数处理内容\n        renderedContent.value = renderMarkdown(markdownText);\n      } catch (err) {\n        console.error('加载Markdown文件失败:', err);\n        error.value = `加载失败: ${err.message}`;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    onMounted(() => {\n      fetchMarkdownContent();\n    });\n\n    watch(() => props.filePath, () => {\n      fetchMarkdownContent();\n    });\n\n    return {\n      renderedContent,\n      isLoading,\n      error\n    };\n  }\n});\n</script>\n\n<style scoped>\n.markdown-preview {\n  padding: 16px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.markdown-header {\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #eee;\n}\n\n.markdown-title {\n  font-size: 18px;\n  color: #333;\n  margin: 0;\n}\n\n.markdown-content {\n  flex: 1;\n  overflow-y: auto;\n  font-size: 14px;\n  line-height: 1.7;\n  padding-right: 10px;\n}\n\n.markdown-content :deep(h1),\n.markdown-content :deep(h2),\n.markdown-content :deep(h3),\n.markdown-content :deep(h4),\n.markdown-content :deep(h5),\n.markdown-content :deep(h6) {\n  margin-top: 1.5em;\n  margin-bottom: 0.5em;\n  color: #333;\n}\n\n.markdown-content :deep(p) {\n  margin: 1em 0;\n}\n\n.markdown-content :deep(ul),\n.markdown-content :deep(ol) {\n  padding-left: 2em;\n  margin: 1em 0;\n}\n\n.markdown-content :deep(pre) {\n  background-color: #f6f8fa;\n  border-radius: 4px;\n  padding: 12px;\n  overflow-x: auto;\n}\n\n.markdown-content :deep(code) {\n  font-family: SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, monospace;\n  background-color: rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n  padding: 2px 4px;\n  font-size: 0.9em;\n}\n\n.markdown-content :deep(pre code) {\n  background-color: transparent;\n  padding: 0;\n}\n\n.markdown-content :deep(blockquote) {\n  border-left: 4px solid #ddd;\n  padding-left: 16px;\n  margin: 1em 0;\n  color: #666;\n}\n\n.markdown-content :deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1em 0;\n}\n\n.markdown-content :deep(th),\n.markdown-content :deep(td) {\n  border: 1px solid #ddd;\n  padding: 8px 12px;\n}\n\n.markdown-content :deep(th) {\n  background-color: #f6f8fa;\n  font-weight: 500;\n}\n\n.loading-indicator {\n  text-align: center;\n  padding: 20px;\n  color: #888;\n}\n\n.error-message {\n  text-align: center;\n  padding: 20px;\n  color: #e53935;\n  background-color: #ffebee;\n  border-radius: 4px;\n  margin-top: 20px;\n}\n</style> ","import { render } from \"./MarkdownPreview.vue?vue&type=template&id=1a232d32&scoped=true\"\nimport script from \"./MarkdownPreview.vue?vue&type=script&lang=js\"\nexport * from \"./MarkdownPreview.vue?vue&type=script&lang=js\"\n\nimport \"./MarkdownPreview.vue?vue&type=style&index=0&id=1a232d32&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1a232d32\"]])\n\nexport default __exports__","<template>\n  <div class=\"file-preview-card\" @click=\"openPreview\">\n    <div class=\"file-icon\">{{ getFileIcon(fileType) }}</div>\n    <div class=\"file-info\">\n      <div class=\"file-title\">{{ fileName }}</div>\n      <div class=\"file-description\">{{ getFileDescription(fileType) }} • 点击查看</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'FilePreview',\n  props: {\n    fileName: {\n      type: String,\n      required: true\n    },\n    filePath: {\n      type: String,\n      required: true\n    },\n    fileType: {\n      type: String,\n      default: 'other'\n    }\n  },\n  emits: ['preview'],\n  setup(props, { emit }) {\n    const getFileIcon = (type) => {\n      const icons = {\n        'markdown': '📝',\n        'report': '📊',\n        'html': '🌐',\n        'image': '🖼️',\n        'json': '📋',\n        'csv': '📈',\n        'other': '📄'\n      };\n      return icons[type] || icons.other;\n    };\n\n    const getFileDescription = (type) => {\n      const descriptions = {\n        'markdown': 'Markdown文档',\n        'report': '分析报告',\n        'html': 'HTML页面',\n        'image': '图片文件',\n        'json': 'JSON数据',\n        'csv': '数据表格',\n        'other': '文件'\n      };\n      return descriptions[type] || descriptions.other;\n    };\n\n    const openPreview = () => {\n      emit('preview', {\n        fileName: props.fileName,\n        filePath: props.filePath,\n        fileType: props.fileType\n      });\n    };\n\n    return {\n      getFileIcon,\n      getFileDescription,\n      openPreview\n    };\n  }\n});\n</script>\n\n<style scoped>\n.file-preview-card {\n  display: flex;\n  align-items: center;\n  background-color: #f8f8f8;\n  border: 1px solid #e0e0e0;\n  border-left: 3px solid #1890ff;\n  border-radius: 4px;\n  padding: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  opacity: 0.85;\n}\n\n.file-preview-card:hover {\n  background-color: #f0f0f0;\n  border-color: #d0d0d0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.file-icon {\n  font-size: 20px;\n  margin-right: 12px;\n  color: #1890ff;\n  background-color: rgba(24, 144, 255, 0.1);\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.file-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-title {\n  font-weight: 500;\n  color: #666;\n  margin-bottom: 4px;\n}\n\n.file-description {\n  font-size: 12px;\n  color: #999;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style> ","import { render } from \"./FilePreview.vue?vue&type=template&id=f4d5d650&scoped=true\"\nimport script from \"./FilePreview.vue?vue&type=script&lang=js\"\nexport * from \"./FilePreview.vue?vue&type=script&lang=js\"\n\nimport \"./FilePreview.vue?vue&type=style&index=0&id=f4d5d650&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f4d5d650\"]])\n\nexport default __exports__","<template>\n  <div class=\"file-link-detector\">\n    <!-- 使用动态引用处理文本点击 -->\n    <div ref=\"contentContainer\" @click=\"handleTextClick\"></div>\n    \n    <!-- 显示找到的文件链接 -->\n    <div v-if=\"detectedFiles.length > 0\" class=\"detected-files\">\n      <div class=\"files-section-title\">相关文件:</div>\n      <div class=\"file-links\">\n        <div \n          v-for=\"(file, index) in detectedFiles\" \n          :key=\"index\"\n          class=\"file-link\"\n          @click=\"openFile(file)\"\n        >\n          <span class=\"file-icon\">{{ getFileIcon(file.fileType) }}</span>\n          <span class=\"file-name\">{{ file.fileName }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted, watch } from 'vue';\n\nexport default defineComponent({\n  name: 'FileLinkDetector',\n  props: {\n    content: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['file-preview'],\n  setup(props, { emit }) {\n    const detectedFiles = ref([]);\n    const contentContainer = ref(null);\n    \n    // 文件类型图标映射\n    const getFileIcon = (type) => {\n      const icons = {\n        'markdown': '📝',\n        'report': '📊',\n        'html': '🌐',\n        'image': '🖼️',\n        'json': '📋',\n        'csv': '📈',\n        'other': '📄'\n      };\n      return icons[type] || icons.other;\n    };\n    \n    // 更新内容显示\n    const updateContent = () => {\n      if (!contentContainer.value) return;\n      \n      let text = props.content;\n      \n      // 检查文本中是否已包含HTML标签\n      const containsHtmlTags = /<[^>]+>/.test(text);\n      if (containsHtmlTags) {\n        contentContainer.value.innerHTML = text;\n        return;\n      }\n      \n      // 转义HTML特殊字符\n      text = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      \n      // 文件路径高亮处理\n      detectedFiles.value.forEach(file => {\n        // 为文件路径添加高亮样式\n        const escapedPath = file.originalMatch.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const regex = new RegExp(escapedPath, 'g');\n        text = text.replace(regex, `<span class=\"file-path-highlight\" data-file-index=\"${detectedFiles.value.indexOf(file)}\">${file.originalMatch}</span>`);\n      });\n      \n      contentContainer.value.innerHTML = text;\n    };\n    \n    // 文本点击处理\n    const handleTextClick = (event) => {\n      // 检查是否点击了文件路径高亮区域\n      if (event.target.classList.contains('file-path-highlight')) {\n        const fileIndex = parseInt(event.target.dataset.fileIndex);\n        if (!isNaN(fileIndex) && fileIndex >= 0 && fileIndex < detectedFiles.value.length) {\n          openFile(detectedFiles.value[fileIndex]);\n        }\n      }\n    };\n    \n    // 检测文本中的文件路径\n    const detectFilePaths = async () => {\n      // 清空旧的检测结果\n      detectedFiles.value = [];\n      \n      const content = props.content;\n      \n      // 更精确的文件模式匹配 - 只有特定前缀才识别文件\n      const filePatterns = [\n        {\n          // 匹配storyteller/output路径\n          pattern: /storyteller\\/output(?:\\/[\\w.-]+)*\\/([^/\\s,，.。]+\\.\\w+)/g,\n          type: 'auto'\n        },\n        {\n          // 匹配iterations路径\n          pattern: /iterations\\/([^/\\s,，.。]+\\.\\w+)/g,\n          type: 'auto'\n        },\n        {\n          // 匹配\"已保存到\"后面的文件路径\n          pattern: /已保存到\\s*(?:\\/[\\w.-]+)*\\/([^/\\s,，.。]+\\.\\w+)/g,\n          type: 'auto'\n        },\n        {\n          // 匹配\"generated:\"后面的文件\n          pattern: /generated:\\s*([a-zA-Z0-9_-]+\\.\\w+)/gi,\n          type: 'auto'\n        }\n      ];\n      \n      const foundFiles = [];\n      \n      // 逐行检查文件引用\n      const lines = content.split('\\n');\n      lines.forEach(line => {\n        filePatterns.forEach(({ pattern, type }) => {\n          let match;\n          while ((match = pattern.exec(line)) !== null) {\n            if (match[1]) {\n              const fileName = match[1].trim().replace(/[,，.。\"']/g, '');\n              const basePath = '/storyteller/output/';\n              const filePath = `${basePath}${fileName}`;\n              \n              // 确定文件类型\n              let fileType = type;\n              if (type === 'auto') {\n                const ext = fileName.split('.').pop().toLowerCase();\n                switch (ext) {\n                  case 'md': fileType = 'markdown'; break;\n                  case 'html': fileType = 'html'; break;\n                  case 'png': case 'jpg': case 'jpeg': case 'gif': case 'svg': fileType = 'image'; break;\n                  case 'json': fileType = 'json'; break;\n                  case 'csv': fileType = 'csv'; break;\n                  default: fileType = 'other';\n                }\n              }\n              \n              // 添加到找到的文件列表\n              if (!foundFiles.some(f => f.fileName === fileName)) {\n                foundFiles.push({\n                  fileName,\n                  filePath,\n                  fileType,\n                  originalMatch: match[0]\n                });\n              }\n            }\n          }\n          // 重置正则表达式状态，避免下次循环问题\n          pattern.lastIndex = 0;\n        });\n      });\n      \n      // 检查文件是否存在\n      for (const file of foundFiles) {\n        try {\n          const response = await fetch(file.filePath, { method: 'HEAD' });\n          if (response.ok) {\n            detectedFiles.value.push(file);\n            console.log(`确认文件存在: ${file.filePath}`);\n          }\n        } catch (err) {\n          console.error(`检查文件存在性失败: ${file.filePath}`, err);\n        }\n      }\n      \n      // 检测完成后更新内容显示\n      updateContent();\n    };\n    \n    // 打开文件预览\n    const openFile = (file) => {\n      emit('file-preview', file);\n    };\n    \n    // 观察内容变化\n    watch(() => props.content, () => {\n      detectFilePaths();\n    });\n    \n    // 组件挂载时检测文件路径\n    onMounted(() => {\n      detectFilePaths();\n    });\n    \n    // 检测完成后更新内容\n    watch(detectedFiles, () => {\n      updateContent();\n    });\n    \n    return {\n      contentContainer,\n      detectedFiles,\n      getFileIcon,\n      openFile,\n      handleTextClick\n    };\n  }\n});\n</script>\n\n<style scoped>\n.file-link-detector {\n  position: relative;\n}\n\n.detected-files {\n  margin-top: 12px;\n  border-top: 1px solid #eee;\n  padding-top: 8px;\n}\n\n.files-section-title {\n  font-size: 13px;\n  color: #888;\n  margin-bottom: 8px;\n}\n\n.file-links {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.file-link {\n  display: flex;\n  align-items: center;\n  background-color: #f5f5f5;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 13px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.file-link:hover {\n  background-color: #e8e8e8;\n  border-color: #d0d0d0;\n}\n\n.file-icon {\n  margin-right: 6px;\n}\n\n.file-name {\n  color: #1890ff;\n}\n\n:deep(.file-path-highlight) {\n  color: #1890ff;\n  background-color: rgba(24, 144, 255, 0.1);\n  padding: 2px 4px;\n  border-radius: 3px;\n  cursor: pointer;\n}\n</style> ","import { render } from \"./FileLinkDetector.vue?vue&type=template&id=6005c87b&scoped=true\"\nimport script from \"./FileLinkDetector.vue?vue&type=script&lang=js\"\nexport * from \"./FileLinkDetector.vue?vue&type=script&lang=js\"\n\nimport \"./FileLinkDetector.vue?vue&type=style&index=0&id=6005c87b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6005c87b\"]])\n\nexport default __exports__","import { render } from \"./ChatPage.vue?vue&type=template&id=eaa257ba&scoped=true\"\nimport script from \"./ChatPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChatPage.vue?vue&type=style&index=0&id=eaa257ba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaa257ba\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=3d10d280\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3d10d280&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3944); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_ChatPage","key","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","$setup","query","onClick","_cache","args","toggleDatasetPreview","_createStaticVNode","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","displayedBlocks","block","index","type","_hoisted_11","_component_FileLinkDetector","content","onFilePreview","selectFile","$event","selectCodeBlock","_hoisted_13","_hoisted_14","isJson","_hoisted_15","getCodePreview","_hoisted_12","_createBlock","_component_StatusTimeline","items","initialExpanded","expanded","_component_TaskCard","taskId","id","_component_FilePreview","fileName","filePath","fileType","onPreview","_createCommentVNode","selectedCodeBlock","_hoisted_16","_component_CodeBlock","closeCodeDetail","selectedFile","_hoisted_17","_component_MarkdownPreview","src","frameborder","_hoisted_18","alt","_hoisted_19","closeFilePreview","isDatasetPreviewVisible","_component_DatasetPreview","isLoading","datasetError","datasetHeaders","datasetRows","onClose","fullScreenImage","closeFullScreenImage","_hoisted_20","_hoisted_21","_withModifiers","scrollToTop","showBackToTop","scanIterationsDirectory","isTypingComplete","skipTypingAnimation","_ctx","$emit","$props","length","header","row","rowIndex","cell","cellIndex","name","props","Boolean","required","String","default","Array","emits","__exports__","_normalizeClass","$data","isCollapsed","$options","codeType","toggleCollapse","data","computed","this","methods","toggleExpanded","getDisplayTitle","Math","floor","item","itemIndex","status","toggleExpand","_createTextVNode","displayId","isExpanded","innerHTML","formattedContent","extractedTaskId","idMatch","match","trim","nameMatch","marked","e","renderedContent","error","renderMarkdown","text","require","parse","console","warn","simpleMarkdownToHtml","html","replace","defineComponent","setup","ref","fetchMarkdownContent","async","value","response","fetch","ok","Error","markdownText","err","message","onMounted","watch","openPreview","getFileIcon","getFileDescription","emit","icons","other","descriptions","handleTextClick","detectedFiles","file","openFile","contentContainer","updateContent","containsHtmlTags","test","forEach","escapedPath","originalMatch","regex","RegExp","indexOf","event","target","classList","contains","fileIndex","parseInt","dataset","isNaN","detectFilePaths","filePatterns","pattern","foundFiles","lines","split","line","exec","basePath","ext","pop","toLowerCase","some","f","push","lastIndex","method","log","components","DatasetPreview","CodeBlock","StatusTimeline","TaskCard","MarkdownPreview","FilePreview","FileLinkDetector","introContent","contentBlocks","typingSpeed","generatedFiles","contentUnits","displayedUnits","currentUnitIndex","typingIntervalRef","code","substring","formatTextWithHighlights","containsHTMLTags","keywords","result","actionKeywords","action","className","parts","join","keyword","openFullScreenImage","imageSrc","loadDataset","csvText","filter","map","h","maxRows","min","slice","window","addEventListener","handleScroll","logContent","styledContent","parseContentBlocks","setTimeout","onUnmounted","removeEventListener","clearInterval","scrollY","startTypingAnimation","prepareContentUnits","shouldAutoScroll","scrollHandler","scrollPosition","innerHeight","nearBottom","document","body","scrollHeight","typingInterval","setInterval","processNextContentUnit","scrollTo","top","behavior","unit","rebuildDisplayedBlocks","lastBlock","blocks","currentBlock","currentBlockLines","parentType","blockType","filteredContent","markers","coveredPositions","taskBlockRegex","taskMatch","taskContent","startIndex","endIndex","start","end","i","codeBlockRegex","codeMatch","codeContent","statusListRegex","statusMatch","statusContent","statusItemRegex","statusItems","statusItemMatch","detail","marker","m","position","isInsideTaskBlock","markerLength","coveredCount","textStart","inText","isMarked","textContent","sort","a","b","posA","undefined","Infinity","posB","rest","blockTypeCounts","reduce","counts","checkAndPreviewImage","pathsToTry","tryLoadImage","paths","img","Image","onload","onerror","highPriorityPaths","fetchWithTimeout","url","options","timeout","controller","AbortController","abort","signal","clearTimeout","commonReportFiles","reportFilePromises","priority","Promise","all","commonChartFiles","chartFilePromises","foundReports","foundCharts","scanPromises","dirPath","scanHighPriorityDirectory","uniqueFiles","seenPaths","Set","has","add","priorityA","priorityB","typeOrder","typeA","typeB","fileDisplayBlock","includes","imageFiles","docFiles","dataFiles","otherFiles","reportFile","find","anyMarkdown","errorBlock","fileTypes","filesToCheck","t","fetchPromises","detectFileType","ChatPage","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","notFulfilled","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}